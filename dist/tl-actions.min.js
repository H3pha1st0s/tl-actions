var A={root:document,actionAttr:"data-tl-action",triggerAttr:"data-tl-trigger",paramsAttr:"data-tl-params"};function T(d,n=A){let i={};for(let{name:s,value:a}of d.attributes){if(!s.startsWith(n.paramsAttr))continue;let l=s.slice(n.paramsAttr.length+1);i[l]=a}return i}function k(d={}){let n={...A,...d},i=new Map,s=new Set,a=null;function l(e,t,r){if(typeof r!="function")throw new TypeError(`Handler for ${e}:${t} must be a function`);return i.has(e)||i.set(e,new Map),i.get(e).set(t,r),u}function h(e){for(let[t,r]of Object.entries(e))for(let[o,c]of Object.entries(r))l(t,o,c);return u}function b(e){let[t,r]=e.split(":").map(c=>c&&c.trim());if(!t||!r)return console.warn(`Invalid value for data-tl-action "${e}". Expected "action:mode".`),null;let o=i.get(t)?.get(r);return o?{fn:o,action:t,mode:r}:(console.warn(`Unknown action: ${t}`),null)}function w(e,t){let r=e.getAttribute(n.triggerAttr)||"click";return r?r.split(/\s+/).filter(Boolean).includes(t):t==="click"}function m(e){let t=e.target instanceof Element?e.target:null;if(!t)return;let r=`[${n.actionAttr}]`;if(t=t.closest(r),!t||!n.root.contains(t)||!w(t,e.type))return;let{fn:o,err:c}=b(t.getAttribute(n.actionAttr));if(c){console.warn(c);return}let g=T(t,n);try{let f=o({el:t,ev:e,params:g,root:n.root});f&&typeof f.then=="function"&&f.catch(L=>console.error("Handler throw (async):",L))}catch(f){console.error("Handler throw:",f)}}function y(e){for(let t of e)s.has(t)||(n.root.addEventListener(t,m,!0),s.add(t))}function p(e=n.root){let t=e.querySelectorAll?.(`[${n.actionAttr}]`)??[],r=new Set(["click"]);for(let o of t){let c=o.getAttribute(n.triggerAttr);c&&c.split(/\s+/).filter(Boolean).forEach(g=>r.add(g))}y(r)}function E(){a||(a=new MutationObserver(e=>{let t=[];for(let r of e)r.addedNodes?.forEach(o=>{o.nodeType===1&&t.push(o)});if(t.length)for(let r of t)r instanceof Element&&(r.hasAttribute?.(n.actionAttr)||r.querySelector?.(`[${n.actionAttr}]`))&&p(r)}),a.observe(n.root,{childList:!0,subtree:!0}))}function v(){return p(),E(),u}function $(){for(let e of s)n.root.removeEventListener(e,m,!0);s.clear(),a?.disconnect(),a=null}let u=Object.freeze({register:l,define:h,init:v,destroy:$,_registry:i});return u}export{k as createTL};
